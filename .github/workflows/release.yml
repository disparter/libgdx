name: Release

on:
  pull_request:
    types: [closed]
    branches:
      - main
      - master
    # Only trigger for merged PRs
    # This filters out PRs that were closed without merging
    # because those should not be considered releases
    # See https://help.github.com/en/articles/events-that-trigger-workflows#pull-request-event-pull_request
    # and https://help.github.com/en/actions/reference/events-that-trigger-workflows#pull_request
    # for more information on this event
    # and its different properties and types.
    # Note that `pull_request.merged` is not available in the `closed` event
    # so we need to filter the events using the `pull_request.closed_at` property
    # and checking if it is greater than the `pull_request.merged_at` property
    # See https://github.community/t/pull-request-merged-event-for-actions/17133/7
    # for more information on how to filter for merged PRs using the `closed` event
    if: >
      github.event.pull_request.merged == true &&
      github.event.pull_request.closed_at == github.event.pull_request.merged_at

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          heap-size: '2g'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build

      - name: Publish artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # The GITHUB_REF tag comes in the format 'refs/tags/xxx'.
        # If we split on '/' and take the 3rd value,
        # we can get the release name.
        run: |
          NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
          echo "New version: ${NEW_VERSION}"
          echo "Github username: ${GITHUB_ACTOR}"
          ./gradlew -Pversion=${NEW_VERSION} publish